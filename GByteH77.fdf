## @file
# This is NT32 FDF file with UEFI HII features enabled
#
# Copyright (c) 2007 - 2012, Intel Corporation. All rights reserved.<BR>
#
#    This program and the accompanying materials
#    are licensed and made available under the terms and conditions of the BSD License
#    which accompanies this distribution. The full text of the license may be found at
#    http://opensource.org/licenses/bsd-license.php
#
#    THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
#    WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#



[Defines]
DEFINE	PROJECT_CPU_ROOT = BIOSPkg\Intel\Cpu
DEFINE	PROJECT_PCH_ROOT = BIOSPkg\Intel\LynxPoint
DEFINE	PROJECT_SA_ROOT = BIOSPkg\Intel\SystemAgent
DEFINE	PROJECT_ME_ROOT = BIOSPkg\Intel\Me
DEFINE	PLATFORM_ROOT = BIOSPkg\Platform
DEFINE	PLATFORM_ROOT2 = BIOSPkg\Platform\GByteH77

################################################################################
#
# FD Section
# The [FD] Section is made up of the definition statements and a
# description of what goes into  the Flash Device Image.  Each FD section
# defines one flash "device" image.  A flash device image may be one of
# the following: Removable media bootable image (like a boot floppy
# image,) an Option ROM image (that would be "flashed" into an add-in
# card,) a System "Flash"  image (that would be burned into a system's
# flash) or an Update ("Capsule") image that will be used to update and
# existing system flash.
#
################################################################################
[FD.GByteH77]
ErasePolarity = 1
BaseAddress   = 0xFF800000 | gEfiCommonPkgTokenSpaceGuid.PcdBiosFlashBase     # The base address of the FLASH Device.
Size          = 0x00800000 | gEfiCommonPkgTokenSpaceGuid.PcdBiosFlashSize     # The size in bytes of the FLASH Device		16 Mb
BlockSize     = 0x10000
NumBlocks     = 0x80

DEFINE	BIOS_REGION_OFFSET = 0x4E0000
DEFINE	BIOS_REGION_LIMIT = 0x7FFFFF

################################################################################
#
# Following are lists of FD Region layout which correspond to the locations of different
# images within the flash device.
#
# Regions must be defined in ascending order and may not overlap.
#
# A Layout Region start with a eight digit hex offset (leading "0x" required) followed by
# the pipe "|" character, followed by the size of the region, also in hex with the leading
# "0x" characters. Like:
# Offset|Size
# PcdOffsetCName|PcdSizeCName
# RegionType <FV, DATA, or FILE>
#
################################################################################


#######################################################################################
#
# 	Flash Descriptor (see "Intel® 7 Series/C216 Chipset Family SPI Programming Guide")
#
0x00000000|0x1f0
DATA = {
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 	# 16 * 0xff

# FLVALSIG (0x10)
0x5A, 0xA5, 0xF0, 0x0F, # 0x0FF0A55A FLVALSIG

# FLMAP0 (0x14)
0x03, # FCBA = 0x30 (Flash Component Base Address)
0x00, # NC = 1 component (Number Of Component)
0x04, # FRBA = 0x40 (Flash Region Base Address)
0x03, # NR = 4 (Number Of Regions)

# FLMAP1 (0x18)
0x06, # FMBA = 0x60 (Flash Master Base Address)
0x02, # NM = 2 (Number Of Masters)
0x10, # FPSBA = 0x100 (Flash PCH Strap Base Address)
0x15, # ISL = 21 

# FLMAP2 (0x1C)
0x20, # FPSBA = 0x200 (Flash Processor Strap Base Address)
0x01, # PSL = 1 DWORD (PROC Strap Length of dword's)
0x21, # ICCRIBA = 0x21 (ICC Register Init Base Address)
0x00, #

0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 	# 16 * 0xff

# FCBA offset 0x30
0x44, 0x00, 0x90, 0x64,  # FLCOMP (Flash Components Record)
0x00, 0x00, 0x00, 0x00,  # FLILL (Flash Invalid Instructions Record)
0x00, 0x00, 0x00, 0x00,  # FLPB (Flash Partition Boundary Record)
0xFF, 0xFF, 0xFF, 0xFF,  #

# FRBA offset 0x40
0x00, 0x00, 0x00, 0x00, # FLREG0 Flash Descriptor Region (Flash Region 0)
0xE0, 0x04, 0xFF, 0x07, # FLREG1 BIOS Region 0x4E0000 0x7FFFFF (Flash Region 1)
0x03, 0x00, 0xDF, 0x04, # FLREG2 ME Region   0x3000 0x4DFFFF : 5M SKU ?? (Flash Region 2)
0x01, 0x00, 0x02, 0x00, # FLREG3 Gbe  0x1000 0x2FFF (Flash Region 3)
0xFF, 0x7F, 0x00, 0x00, # FLREG4 Platform Data N/A (Flash Region 4) 
0xFF, 0x7F, 0x00, 0x00, 
0xFF, 0x7F, 0x00, 0x00, 
0xFF, 0xFF, 0xFF, 0xFF, 

# FMBA offset 0x60
0x00, 0x00, 0x0B, 0x0A, # FLMSTR1   # ID Host CPU Bus/Dev/Fun | Read Write Access rights (Flash Master 1)
0x00, 0x00, 0x0D, 0x0C, # FLMSTR2   # ID ME Bus/Dev/Fun | Read Write Access rights (Flash Master 2)
0x18, 0x01, 0x08, 0x08, # FLMSTR3   # ID GbE Bus/Dev/Fun | Read Write Access rights (Flash Master 3)
0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,

# ISBA offset 100
0xA2, 0xD7, 0x30, 0x00,	# PCHSTRP0
0xFF, 0x01, 0x00, 0x04,	# PCHSTRP1
0x00, 0x00, 0x00, 0x00,	# PCHSTRP2
0x00, 0x00, 0x00, 0x00,	# PCHSTRP3
# offset 110
0x02, 0xE1, 0xC8, 0x00,	# PCHSTRP4
0x00, 0x00, 0x00, 0x00,	# PCHSTRP5
0x00, 0x00, 0x00, 0x00,	# PCHSTRP6
0x00, 0x00, 0x00, 0x00,	# PCHSTRP7
# offset 120
0x00, 0x00, 0x00, 0x00,	# PCHSTRP8
0x8C, 0x4A, 0x40, 0x30,	# PCHSTRP9
0x00, 0x00, 0xC4, 0x00,	# PCHSTRP10
0x00, 0x00, 0x00, 0x00,	# PCHSTRP11
# offset 130
0x00, 0x00, 0x00, 0x00,	# PCHSTRP12
0x00, 0x00, 0x00, 0x00,	# PCHSTRP13
0x00, 0x00, 0x00, 0x00,	# PCHSTRP14
0x7E, 0x43, 0x18, 0x01,	# PCHSTRP15
# offset 140
0x00, 0x80, 0x00, 0x80,	# PCHSTRP16
0x02, 0x00, 0x00, 0x00,	# PCHSTRP17
0x00, 0x00, 0x00, 0x00,	# PCHSTRP18
0x04, 0x00, 0x00, 0x00,	# PCHSTRP19
# offset 150
0x00, 0x00, 0x00, 0x00	# PCHSTRP20
}

# offset 200
0x200|0xbf0
DATA = {
0x00, 0x00, 0x00, 0x00
}

# VTBA offset 0xDF0
0xDF0|8
DATA = {
0xEF, 0x40, 0x17, 0x00,	# VSCC0 JEDEC-ID: W25Q64FV(SPI) (Vendor ID, Device ID 0, Device ID 1, Reserved)
0xC2, 0x20, 0x17, 0x00	# VSCC1 JEDEC-ID: MX25L6473E (Vendor ID, Device ID 0, Device ID 1, Reserved)
#0xEF, 0x60, 0x17, 0x00,	#  JEDEC-ID: W25Q64FV(QPI) (Vendor ID, Device ID 0, Device ID 1, Reserved)
#0xEF, 0x40, 0x18, 0x00,	#  JEDEC-ID: W25Q128FV(SPI) (Vendor ID, Device ID 0, Device ID 1, Reserved)
#0xEF, 0x60, 0x18, 0x00,	#  JEDEC-ID: W25Q128FV(QPI) (Vendor ID, Device ID 0, Device ID 1, Reserved)
}

# FLUMAP1 offset 0xEFC
0xEFC|4
DATA = {
0xDF, # VTBA = 0xDF0 (Intel® ME VSCC Table Base Address)
0x02, # VTL = 2 элемента (Intel® ME VSCC Table Length)
0x00, #
0x00  #
}

#
#	end of Flash Descriptor
###############################################################################



###############################################################################
#
#				GBE-region
#
0x00001000|0x2000 # GBE
FILE = $(PLATFORM_ROOT2)/gbe_from_site.bin


###############################################################################
#
#				ME-region
#
0x00003000|0x4dd000 # ME
FILE = $(PLATFORM_ROOT2)/me.bin

###############################################################################
#
#				BIOS-region
#

SET gEfiCommonPkgTokenSpaceGuid.PcdBiosRegionOffset = $(BIOS_REGION_OFFSET)

#
#	DATA	sections:

#	System volume:
DEFINE	SYSTEM_VOLUME_FV_LEN = 0x10000
$(BIOS_REGION_OFFSET)|$(SYSTEM_VOLUME_FV_LEN)
gEfiCommonPkgTokenSpaceGuid.PcdSystemVolumeBase|gEfiCommonPkgTokenSpaceGuid.PcdSystemVolumeSize
FV = SYSTEM_FV

#	Variable:
DEFINE	VARIABLE_FV_OFFSET = ($(BIOS_REGION_OFFSET)+$(SYSTEM_VOLUME_FV_LEN))
DEFINE	VARIABLE_FV_LEN = 0x10000
$(VARIABLE_FV_OFFSET)|$(VARIABLE_FV_LEN)
gEfiMdeModulePkgTokenSpaceGuid.PcdFlashNvStorageVariableBase|gEfiMdeModulePkgTokenSpaceGuid.PcdFlashNvStorageVariableSize

#	WorkingBase:
DEFINE	WORKING_FV_OFFSET = ($(VARIABLE_FV_OFFSET)+$(VARIABLE_FV_LEN))
DEFINE	WORKING_FV_LEN = 0x10000
$(WORKING_FV_OFFSET)|$(WORKING_FV_LEN)
gEfiMdeModulePkgTokenSpaceGuid.PcdFlashNvStorageFtwWorkingBase|gEfiMdeModulePkgTokenSpaceGuid.PcdFlashNvStorageFtwWorkingSize
#NV_FTW_WORKING
DATA = {
  # EDKII_WORKING_BLOCK_SIGNATURE_GUID:
  # {0x9e58292b, 0x7c68, 0x497d, {0xa0, 0xce, 0x65,  0x0, 0xfd, 0x9f, 0x1b, 0x95}}
   0x2b, 0x29, 0x58, 0x9e, 0x68, 0x7c, 0x7d, 0x49, 
   0xa0, 0xce, 0x65,  0x0, 0xfd, 0x9f, 0x1b, 0x95,

  # Crc:UINT32            #WorkingBlockValid:1, WorkingBlockInvalid:1, Reserved
   0xF5, 0x95, 0x52, 0x00, 0xFE, 0xFF, 0xFF, 0xFF,
  # WriteQueueSize: UINT64
  0xE0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
}

#	SpareBase:
DEFINE	SPARE_FV_OFFSET = ($(WORKING_FV_OFFSET)+$(WORKING_FV_LEN))
DEFINE	SPARE_FV_LEN = 0x10000
$(SPARE_FV_OFFSET)|$(SPARE_FV_LEN)
#NV_FTW_SPARE
gEfiMdeModulePkgTokenSpaceGuid.PcdFlashNvStorageFtwSpareBase|gEfiMdeModulePkgTokenSpaceGuid.PcdFlashNvStorageFtwSpareSize

#
#	CODE	sections:
#

DEFINE	PEI_FV_LEN = 0xB0000
DEFINE	PEI_FV_OFFSET = ($(BIOS_REGION_LIMIT)+1-$(PEI_FV_LEN))
DEFINE	MICROCODE_FV_LEN = 0x20000
DEFINE	MICROCODE_FV_OFFSET = ($(PEI_FV_OFFSET)-$(MICROCODE_FV_LEN))
DEFINE	DXE_FV_OFFSET = ($(SPARE_FV_OFFSET)+$(SPARE_FV_LEN))
DEFINE	DXE_FV_LEN = ($(MICROCODE_FV_OFFSET)-$(DXE_FV_OFFSET))

#	DXE:
$(DXE_FV_OFFSET)|$(DXE_FV_LEN)
gEfiMdeModulePkgTokenSpaceGuid.PcdFlashFvRecoveryBase|gEfiMdeModulePkgTokenSpaceGuid.PcdFlashFvRecoverySize
FV = DXEUPFV

# 	MICROCODE:
$(MICROCODE_FV_OFFSET)|$(MICROCODE_FV_LEN)
gEfiCommonPkgTokenSpaceGuid.PcdMicrocodeBase|gEfiCommonPkgTokenSpaceGuid.PcdMicrocodeSize
FV = MICROCODE

#	PEI:
$(PEI_FV_OFFSET)|$(PEI_FV_LEN)
gEfiMdeModulePkgTokenSpaceGuid.PcdBootFirmwareVolumeBase|gEfiMdeModulePkgTokenSpaceGuid.PcdBootFirmwareVolumeSize
FV = MAINFV


##########################################################################
[FV.SYSTEM_FV]
BlockSize          = 0x10000
FvAlignment        = 16         #FV alignment and FV attributes setting.
ERASE_POLARITY     = 1
MEMORY_MAPPED      = TRUE
STICKY_WRITE       = TRUE
LOCK_CAP           = TRUE
LOCK_STATUS        = TRUE
WRITE_DISABLED_CAP = TRUE
WRITE_ENABLED_CAP  = TRUE
WRITE_STATUS       = TRUE
WRITE_LOCK_CAP     = TRUE
WRITE_LOCK_STATUS  = TRUE
READ_DISABLED_CAP  = TRUE
READ_ENABLED_CAP   = TRUE
READ_STATUS        = TRUE
READ_LOCK_CAP      = TRUE
READ_LOCK_STATUS   = TRUE
FvNameGuid         = 9EDB353A-DEFC-4f52-B2A4-8773F7166155

FV_EXT_ENTRY  TYPE = 0x0002  {
  DATA = {
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  }
}
##########################################################################


##########################################################################

[FV.NEW_FV]
BlockSize          = 0x10000
FvAlignment        = 16         #FV alignment and FV attributes setting.
ERASE_POLARITY     = 1
MEMORY_MAPPED      = TRUE
STICKY_WRITE       = TRUE
LOCK_CAP           = TRUE
LOCK_STATUS        = TRUE
WRITE_DISABLED_CAP = TRUE
WRITE_ENABLED_CAP  = TRUE
WRITE_STATUS       = TRUE
WRITE_LOCK_CAP     = TRUE
WRITE_LOCK_STATUS  = TRUE
READ_DISABLED_CAP  = TRUE
READ_ENABLED_CAP   = TRUE
READ_STATUS        = TRUE
READ_LOCK_CAP      = TRUE
READ_LOCK_STATUS   = TRUE
FvNameGuid         = C7A74A8C-FE95-4463-B4DD-E10F636F9897

FV_EXT_ENTRY  TYPE = 0x0002  {
  DATA = {
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  }
}

FILE FV_IMAGE = C7A74A8C-FE95-4463-B4DD-E10F636F9777 {
   SECTION GUIDED EE4E5898-3914-4259-9D6E-DC7BD79403CF PROCESSING_REQUIRED = TRUE { # LzmaCompress
      SECTION FV_IMAGE = TMP_NEW_FV
   }
 }

[FV.TMP_NEW_FV]
BlockSize          = 0x10000
FvAlignment        = 16         #FV alignment and FV attributes setting.
ERASE_POLARITY     = 1
MEMORY_MAPPED      = TRUE
STICKY_WRITE       = TRUE
LOCK_CAP           = TRUE
LOCK_STATUS        = TRUE
WRITE_DISABLED_CAP = TRUE
WRITE_ENABLED_CAP  = TRUE
WRITE_STATUS       = TRUE
WRITE_LOCK_CAP     = TRUE
WRITE_LOCK_STATUS  = TRUE
READ_DISABLED_CAP  = TRUE
READ_ENABLED_CAP   = TRUE
READ_STATUS        = TRUE
READ_LOCK_CAP      = TRUE
READ_LOCK_STATUS   = TRUE


################################################################################
#
# FV Section
#
# [FV] section is used to define what components or modules are placed within a flash
# device file.  This section also defines order the components and modules are positioned
# within the image.  The [FV] section consists of define statements, set statements and
# module statements.
#
################################################################################
[FV.DXEUPFV]
FvAlignment        = 16         #FV alignment and FV attributes setting.
ERASE_POLARITY     = 1
MEMORY_MAPPED      = TRUE
STICKY_WRITE       = TRUE
LOCK_CAP           = TRUE
LOCK_STATUS        = TRUE
WRITE_DISABLED_CAP = TRUE
WRITE_ENABLED_CAP  = TRUE
WRITE_STATUS       = TRUE
WRITE_LOCK_CAP     = TRUE
WRITE_LOCK_STATUS  = TRUE
READ_DISABLED_CAP  = TRUE
READ_ENABLED_CAP   = TRUE
READ_STATUS        = TRUE
READ_LOCK_CAP      = TRUE
READ_LOCK_STATUS   = TRUE
FvNameGuid         = 40e12513-14d1-4208-ab28-55634fd73417


FV_EXT_ENTRY  TYPE = 0x0002  {
  DATA = {
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  }
}

#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#
#
# This file contains the compressed 'DXEFV', which is compressed
# in a single compression operation in order to achieve better
# overall compression.
#
FILE FV_IMAGE = 20bc8ac9-94d1-4208-ab28-5d673fd73486 {
   SECTION GUIDED EE4E5898-3914-4259-9D6E-DC7BD79403CF PROCESSING_REQUIRED = TRUE { # LzmaCompress
      SECTION FV_IMAGE = DXEFV
   }
 }


################################################################################
#
# FV Section
#
# [FV] section is used to define what components or modules are placed within a flash
# device file.  This section also defines order the components and modules are positioned
# within the image.  The [FV] section consists of define statements, set statements and
# module statements.
#
################################################################################
[FV.DXEFV]
BlockSize          = 0x1000
FvAlignment        = 16         #FV alignment and FV attributes setting.
ERASE_POLARITY     = 1
MEMORY_MAPPED      = TRUE
STICKY_WRITE       = TRUE
LOCK_CAP           = TRUE
LOCK_STATUS        = TRUE
WRITE_DISABLED_CAP = TRUE
WRITE_ENABLED_CAP  = TRUE
WRITE_STATUS       = TRUE
WRITE_LOCK_CAP     = TRUE
WRITE_LOCK_STATUS  = TRUE
READ_DISABLED_CAP  = TRUE
READ_ENABLED_CAP   = TRUE
READ_STATUS        = TRUE
READ_LOCK_CAP      = TRUE
READ_LOCK_STATUS   = TRUE

#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

APRIORI DXE {
  INF  MdeModulePkg/Universal/DevicePathDxe/DevicePathDxe.inf
  INF  MdeModulePkg/Universal/PCD/Dxe/Pcd.inf
  INF  IntelFrameworkModulePkg/Universal/DataHubDxe/DataHubDxe.inf
  INF  BIOSPkg/Intel/LynxPoint/Spi/RuntimeDxe/PchSpiRuntime.inf 	 	   # from Pch-Dxe.dsc:  Pch-SPI for FVB-write (FVB = EFI_FIRMWARE_VOLUME_BLOCK2_PROTOCOL)
  INF  $(PLATFORM_ROOT)/FvbServicesRuntimeDxe/FvbServicesRuntimeDxe.inf	 
}

#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# CommonPkg
#
  INF  CommonPkg/fsw_ext2/Ext2Dxe.inf
  INF  CommonPkg/fsw_ext4/Ext4Dxe.inf
  INF  CommonPkg/PcdHelperDxe/PcdHelperDxe.inf
  INF  CommonPkg/BdsHelperDxe/BdsHelperDxe.inf
  INF  CommonPkg/UserManagerLiteDxe/UserManagerDxe.inf
  INF  CommonPkg/TcpHelperDxe/TcpHelperDxe.inf
  INF  CommonPkg/UsbBusRuntimeDxe/UsbBusDxe.inf 
  INF  CommonPkg/UsbEhciRuntimeDxe/EhciDxe.inf 
  INF  CommonPkg/UsbKbRuntimeDxe/UsbKbDxe.inf 

  INF USE=X64 CommonPkg/NtfsBinPkg/Ntfs.inf

  INF  RuleOverride=BINARY USE = X64  CommonPkg/SataAhciRom/SataAhciRom.inf
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# EdkCompatibilityPkg
#
  INF  EdkCompatibilityPkg/Compatibility/SmmBaseOnSmmBase2Thunk/SmmBaseOnSmmBase2Thunk.inf
  INF  EdkCompatibilityPkg/Compatibility/BootScriptSaveOnS3SaveStateThunk/BootScriptSaveOnS3SaveStateThunk.inf
  INF  EdkCompatibilityPkg/Compatibility/SmmControl2OnSmmControlThunk/SmmControl2OnSmmControlThunk.inf
  INF  EdkCompatibilityPkg/Compatibility/SmmAccess2OnSmmAccessThunk/SmmAccess2OnSmmAccessThunk.inf
  INF  EdkCompatibilityPkg/Compatibility/FvOnFv2Thunk/FvOnFv2Thunk.inf
  INF  EdkCompatibilityPkg/Compatibility/LegacyRegion2OnLegacyRegionThunk/LegacyRegion2OnLegacyRegionThunk.inf
  INF  EdkCompatibilityPkg/Compatibility/PiSmbiosRecordOnDataHubSmbiosRecordThunk/PiSmbiosRecordOnDataHubSmbiosRecordThunk.inf
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# FatPkg
#
  INF FatPkg/EnhancedFatDxe/Fat.inf
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# BIOSPkg
#
  INF  BIOSPkg/Intel/LynxPoint/Spi/RuntimeDxe/PchSpiRuntime.inf 	 	# from Pch-Dxe.dsc:  Pch-SPI for FVB-write (FVB = EFI_FIRMWARE_VOLUME_BLOCK2_PROTOCOL)
  INF  BIOSPkg/Intel/AcpiTables/SampleCode/AcpiPolicyInit/Dxe/AcpiDxePolicyInit.inf
  INF  BIOSPkg/Intel/AcpiTables/Cppc/AcpiTables/CppcAcpiTables.inf     # дополнительные ACPI-таблицы (имеют собственные установщики)
  INF  BIOSPkg/Intel/AcpiTables/AcpiFvi/AcpiFvi.inf
  INF  BIOSPkg/Intel/AcpiTables/Cppc/Dxe/Cppc.inf
  #
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# IA32FamilyCpuPkg
#
  INF  IA32FamilyCpuPkg/PiSmmCpuDxeSmm/PiSmmCpuDxeSmm.inf
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# IntelFrameworkModulePkg
#
  INF  IntelFrameworkModulePkg/Universal/StatusCode/RuntimeDxe/StatusCodeRuntimeDxe.inf
  INF  IntelFrameworkModulePkg/Universal/DataHubDxe/DataHubDxe.inf
  INF  IntelFrameworkModulePkg/Universal/CpuIoDxe/CpuIoDxe.inf
  INF  IntelFrameworkModulePkg/Bus/Pci/IdeBusDxe/IdeBusDxe.inf
  INF  IntelFrameworkModulePkg/Bus/Isa/IsaBusDxe/IsaBusDxe.inf
  INF  IntelFrameworkModulePkg/Bus/Isa/IsaSerialDxe/IsaSerialDxe.inf
  INF  IntelFrameworkModulePkg/Bus/Isa/Ps2KeyboardDxe/Ps2keyboardDxe.inf
  INF  IntelFrameworkModulePkg/Bus/Isa/Ps2MouseDxe/Ps2MouseDxe.inf
  INF  IntelFrameworkModulePkg/Csm/LegacyBiosDxe/LegacyBiosDxe.inf
  INF  IntelFrameworkModulePkg/Csm/BiosThunk/VideoDxe/VideoDxe.inf
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# MdeModulePkg
#
  INF  MdeModulePkg/Universal/PCD/Dxe/Pcd.inf
  INF  MdeModulePkg/Core/RuntimeDxe/RuntimeDxe.inf
  INF  MdeModulePkg/Universal/Metronome/Metronome.inf
  INF  MdeModulePkg/Universal/SecurityStubDxe/SecurityStubDxe.inf
  INF  MdeModulePkg/Universal/SmbiosDxe/SmbiosDxe.inf
  INF  MdeModulePkg/Universal/EbcDxe/EbcDxe.inf
  INF  MdeModulePkg/Universal/MemoryTest/NullMemoryTestDxe/NullMemoryTestDxe.inf
  INF  MdeModulePkg/Universal/HiiDatabaseDxe/HiiDatabaseDxe.inf
  INF  MdeModulePkg/Universal/FaultTolerantWriteDxe/FaultTolerantWriteDxe.inf
  INF  MdeModulePkg/Universal/FaultTolerantWriteDxe/FaultTolerantWriteSmmDxe.inf
  INF  MdeModulePkg/Universal/FaultTolerantWriteDxe/FaultTolerantWriteSmm.inf 
!if $(SECURE_BOOT_ENABLE) == FALSE
  INF  MdeModulePkg/Universal/Variable/RuntimeDxe/VariableRuntimeDxe.inf
  INF  MdeModulePkg/Universal/Variable/RuntimeDxe/VariableSmmRuntimeDxe.inf
  INF  MdeModulePkg/Universal/Variable/RuntimeDxe/VariableSmm.inf
!endif
  INF  MdeModulePkg/Universal/WatchdogTimerDxe/WatchdogTimer.inf
  INF  MdeModulePkg/Universal/MonotonicCounterRuntimeDxe/MonotonicCounterRuntimeDxe.inf
  INF  MdeModulePkg/Universal/CapsuleRuntimeDxe/CapsuleRuntimeDxe.inf
  INF  MdeModulePkg/Universal/Console/ConPlatformDxe/ConPlatformDxe.inf
  INF  MdeModulePkg/Universal/Console/ConSplitterDxe/ConSplitterDxe.inf
  INF  MdeModulePkg/Universal/Console/GraphicsConsoleDxe/GraphicsConsoleDxe.inf
  INF  MdeModulePkg/Universal/Console/TerminalDxe/TerminalDxe.inf
  INF  MdeModulePkg/Universal/DevicePathDxe/DevicePathDxe.inf
  INF  MdeModulePkg/Universal/Disk/DiskIoDxe/DiskIoDxe.inf
  INF  MdeModulePkg/Universal/Disk/PartitionDxe/PartitionDxe.inf
  INF  MdeModulePkg/Universal/PrintDxe/PrintDxe.inf
  INF  RuleOverride = TIANOCOMPRESSED MdeModulePkg/Universal/Disk/UnicodeCollation/EnglishDxe/EnglishDxe.inf
  INF  MdeModulePkg/Universal/Acpi/S3SaveStateDxe/S3SaveStateDxe.inf
  INF  MdeModulePkg/Universal/PlatformDriOverrideDxe/PlatformDriOverrideDxe.inf
  # Usb:
  INF  MdeModulePkg/Bus/Pci/EhciDxe/EhciDxe.inf
#  INF  MdeModulePkg/Bus/Pci/XhciDxe/XhciDxe.inf
  INF  MdeModulePkg/Bus/Ata/AtaAtapiPassThru/AtaAtapiPassThru.inf
  INF  MdeModulePkg/Bus/Ata/AtaBusDxe/AtaBusDxe.inf
  INF  MdeModulePkg/Bus/Usb/UsbBusDxe/UsbBusDxe.inf
  INF  MdeModulePkg/Bus/Usb/UsbMassStorageDxe/UsbMassStorageDxe.inf
  INF  MdeModulePkg/Bus/Usb/UsbKbDxe/UsbKbDxe.inf
  INF  MdeModulePkg/Bus/Usb/UsbMouseDxe/UsbMouseDxe.inf
  
  INF  USE = X64 MdeModulePkg/Bus/Scsi/ScsiBusDxe/ScsiBusDxe.inf 
  INF  USE = X64 MdeModulePkg/Bus/Scsi/ScsiDiskDxe/ScsiDiskDxe.inf 
  
  #
  INF  MdeModulePkg/Universal/StatusCodeHandler/Smm/StatusCodeHandlerSmm.inf
  INF  MdeModulePkg/Universal/ReportStatusCodeRouter/Smm/ReportStatusCodeRouterSmm.inf
  INF  MdeModulePkg/Universal/Network/DpcDxe/DpcDxe.inf
  INF  MdeModulePkg/Universal/Network/ArpDxe/ArpDxe.inf
  INF  MdeModulePkg/Universal/Network/Dhcp4Dxe/Dhcp4Dxe.inf
  INF  MdeModulePkg/Universal/Network/Ip4ConfigDxe/Ip4ConfigDxe.inf
  INF  MdeModulePkg/Universal/Network/Ip4Dxe/Ip4Dxe.inf
  INF  MdeModulePkg/Universal/Network/SnpDxe/SnpDxe.inf
  INF  MdeModulePkg/Universal/Network/MnpDxe/MnpDxe.inf
  INF  MdeModulePkg/Universal/Network/VlanConfigDxe/VlanConfigDxe.inf
  INF  MdeModulePkg/Universal/Network/Mtftp4Dxe/Mtftp4Dxe.inf
  INF  MdeModulePkg/Universal/Network/Tcp4Dxe/Tcp4Dxe.inf
  INF  MdeModulePkg/Universal/Network/Udp4Dxe/Udp4Dxe.inf
  INF  MdeModulePkg/Universal/Network/UefiPxeBcDxe/UefiPxeBcDxe.inf
  INF  MdeModulePkg/Universal/Acpi/AcpiTableDxe/AcpiTableDxe.inf			# устанавливает протокол ACPI_TABLE
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# ApplicationPkg
#
  INF  ApplicationPkg/IniParserDxe/IniParserDxe.inf
  INF  ApplicationPkg/SetupBrowserDxe/SetupBrowserDxe.inf
  INF  ApplicationPkg/SetupVarDxe/SetupVarDxe.inf
  INF  ApplicationPkg/HistoryDxe/HistoryDxe.inf
  INF  ApplicationPkg/RemoteCfgPktDxe/RemoteCfgPktDxe.inf
  INF  ApplicationPkg/RemoteCfgTlsDxe/RemoteCfgTlsDxe.inf
  INF  ApplicationPkg/OpenSSLDxe/OpenSSLDxe.inf
  INF  ApplicationPkg/DataHubGenDxe/DataHubGenDxe.inf
  INF  ApplicationPkg/GlobalConfigDxe/GlobalConfigDxe.inf
  INF  ApplicationPkg/AdvMenuHandlerDxe/AdvMenuHandlerDxe.inf
  INF  ApplicationPkg/LdapDxe/LdapDxe.inf
  INF  ApplicationPkg/LdapAuthDxe/LdapAuthDxe.inf
  INF  ApplicationPkg/GostHashHelperDxe/GostHashHelperDxe.inf
  INF  ApplicationPkg/SmartCard/UsbCcidDxe/UsbCcidDxe.inf
  INF  ApplicationPkg/SmartCardCredentialProviderDxe/SmartCardCredentialProviderDxe.inf
  INF  ApplicationPkg/SmartCard/AthenaDxe/AthenaDxe.inf
  INF  ApplicationPkg/SmartCard/eTokenDxe/eTokenDxe.inf
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# PcAtChipsetPkg
#
  INF  PcAtChipsetPkg/PcatRealTimeClockRuntimeDxe/PcatRealTimeClockRuntimeDxe.inf
  INF  PcAtChipsetPkg/8259InterruptControllerDxe/8259.inf
  INF  PcAtChipsetPkg/IsaAcpiDxe/IsaAcpi.inf
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# Replacement
#
  INF  Replacement/MdeModulePkg/Core/Dxe/DxeMain.inf
  INF  Replacement/MdeModulePkg/Bus/Pci/PciBusDxe/PciBusDxe.inf
  INF  Replacement/EdkCompatibilityPkg/Compatibility/SmmBaseHelper/SmmBaseHelper.inf
  INF  Replacement/MdeModulePkg/Core/PiSmmCore/PiSmmIpl.inf
  INF  Replacement/MdeModulePkg/Core/PiSmmCore/PiSmmCore.inf
  INF  Replacement/IntelFrameworkModulePkg/Universal/Acpi/AcpiSupportDxe/AcpiSupportDxe.inf
  INF  Replacement\$(PROJECT_PCH_ROOT)\PchInit\Dxe\PchInitDxe.inf  # DXE drivers use PCH protocols to initialize PCH
  INF  Replacement\$(PROJECT_SA_ROOT)\PciHostBridge\Dxe\PciHostBridge.inf 
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# SecurityPkg
#
!if $(SECURE_BOOT_ENABLE) == TRUE
  INF  SecurityPkg/VariableAuthenticated/RuntimeDxe/VariableRuntimeDxe.inf
  INF  SecurityPkg/VariableAuthenticated/SecureBootConfigDxe/SecureBootConfigDxe.inf
!endif
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# UefiCpuPkg
#
  INF  UefiCpuPkg/CpuIo2Smm/CpuIo2Smm.inf
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# $(PLATFORM_ROOT)
#
  INF  $(PLATFORM_ROOT)/FvbServicesRuntimeDxe/FvbServicesRuntimeDxe.inf	# переустановка Fvb с опцией Write
  INF  $(PLATFORM_ROOT)/FvbServicesRuntimeDxe/FvbServicesRuntimeSmm.inf	# 
  INF  $(PLATFORM_ROOT)/PciPlatformDxe/PciPlatformDxe.inf	  # 
  INF  $(PLATFORM_ROOT)/PlatformInit/Dxe/PlatformDxe.inf    # GByteH77 platform
  INF  $(PLATFORM_ROOT)/PlatformInfo/Dxe/PlatformInfoDxe.inf
  INF  $(PLATFORM_ROOT)/PeripheralInfo/Dxe/PeripheralInfoDxe.inf
  INF  $(PLATFORM_ROOT)/LegacyBiosPlatformProtocolDxe/LegacyBiosPlatform.inf
  INF  $(PLATFORM_ROOT)/UsbLegacySmmHandler/UsbLegacySmmHandler.inf 
  INF  RuleOverride=BINARY USE = X64 $(PLATFORM_ROOT)/LegacyBiosRom/LegacyBiosRom.inf
  INF  $(PLATFORM_ROOT)/AcpiPlatformDxe/AcpiPlatformDxe.inf	  # инсталлирует ACPI-таблицы из прошивки в ОЗУ и UEFI-структуры
  INF  $(PLATFORM_ROOT)/AcpiPlatformDxe2/AcpiPlatformDxe2.inf	  # копирует ACPI-таблицы из AcpiTable в AcpiSupport
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# $(PLATFORM_ROOT2)
#
  INF  RuleOverride=BINARY USE = X64  $(PLATFORM_ROOT2)/Lan/IntelGigabitLan.inf
  INF  RuleOverride=BINARY USE = X64 $(PLATFORM_ROOT2)/Microcode/MicrocodeDxe.inf
  INF  RuleOverride=BINARY USE = X64  $(PLATFORM_ROOT2)/VideoBios.inf
  INF  RuleOverride=ACPITABLE $(PLATFORM_ROOT2)\AcpiTables\AcpiTables.inf  
!if $(TARGET) == "RELEASE"
  INF  RuleOverride=XML USE = X64 $(PLATFORM_ROOT2)/LoaderConf/Config_Release_GByteH77_Full_Ldap.inf
!else
  INF  RuleOverride=XML USE = X64 $(PLATFORM_ROOT2)/LoaderConf/Config_Debug_GByteH77_Full_Ldap.inf
!endif
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# $(PROJECT_CPU_ROOT)
#
  INF  $(PROJECT_CPU_ROOT)/SampleCode/CpuPolicyInit/Dxe/CpuPolicyInitDxe.inf
  INF  $(PROJECT_CPU_ROOT)\PowerManagement\AcpiTables\PowerMgmtAcpiTables.inf	  # Cpu\..\PowerManagement, установщик - внутри PowerMgmtDxe
  INF  $(PROJECT_CPU_ROOT)\CpuInit\Dxe\CpuInitDxe.inf  # CpuInit DXE drivers
  INF  $(PROJECT_CPU_ROOT)\Dts\Smm\DigitalThermalSensorSmm.inf   # DTS SMM drivers
  INF  $(PROJECT_CPU_ROOT)\Pfat\Smm\PfatServices.inf   # PFAT SMM drivers
  INF  $(PROJECT_CPU_ROOT)\PowerManagement\Dxe\PowerMgmtDxe.inf   # Power Management Drivers
!ifdef	TXT_ENABLE
  INF  $(PROJECT_CPU_ROOT)\Txt\TxtInit\Dxe\TxtDxe.inf   # TxT drivers
!endif
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# $(PROJECT_ME_ROOT)
#
  INF  $(PROJECT_ME_ROOT)/SampleCode/MePolicyInit/Dxe/MeDxePolicyInit.inf
  INF  $(PROJECT_ME_ROOT)/SampleCode/AmtPolicyInit/Dxe/AmtDxePolicyInit.inf
  INF  $(PROJECT_ME_ROOT)/SampleCode/AtPolicyInit/Dxe/AtDxePolicyInit.inf
  INF  $(PROJECT_ME_ROOT)/SampleCode/PlatformReset/RuntimeDxe/PlatformReset.inf
  INF  $(PROJECT_ME_ROOT)\AcpiTables\MeSsdt\MeSsdt_Edk.inf
  INF  $(PROJECT_ME_ROOT)\Heci\Dxe\Hecidrv.inf
!ifdef	ME_SKU_5M
  INF  $(PROJECT_ME_ROOT)\ActiveManagement\AlertStandardFormat\Heci\Dxe\AlertStandardFormatDxe.inf 	# только для INTEL_ME_5MB_FW
  INF  $(PROJECT_ME_ROOT)\ActiveManagement\AmtBootOptions\Dxe\ActiveManagement.inf 			# только для INTEL_ME_5MB_FW
  INF  $(PROJECT_ME_ROOT)\BiosExtension\Efi\BiosExtensionLoader\Dxe\BiosExtensionLoader.inf 		# только для INTEL_ME_5MB_FW
!endif
  INF  $(PROJECT_ME_ROOT)\ActiveManagement\IdeR\Dxe\IdeRController.inf 
  INF  $(PROJECT_ME_ROOT)\ActiveManagement\Sol\Dxe\PciSerial.inf 
  INF  $(PROJECT_ME_ROOT)\FwUpdate\MeFwDowngrade\Dxe\MeFwDowngrade.inf 
  INF  $(PROJECT_ME_ROOT)\At\AtAm\Dxe\AtAm.inf 
  INF  $(PROJECT_ME_ROOT)\Ptt\Smm\PttHciSmm.inf  # Disable the following driver if PTT is not supported
!ifdef	ME_SKU_5M
  INF  RuleOverride=BINARY USE = X64 $(PROJECT_ME_ROOT)\BiosExtension\Efi\Mebx\Mebx.inf
  INF  RuleOverride=BINARY USE = X64 $(PROJECT_ME_ROOT)\BiosExtension\Efi\MebxSetupBrowser\MebxSetupBrowser.inf
!endif
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# $(PROJECT_PCH_ROOT)
#
  INF  $(PROJECT_PCH_ROOT)/SampleCode/PchPolicyInit/Dxe/PchPolicyInitDxe.inf
  INF  $(PROJECT_PCH_ROOT)\ActiveBios\Dxe\ActiveBios.inf  
  INF  $(PROJECT_PCH_ROOT)\Spi\Smm\PchSpiSmm.inf  
  INF  $(PROJECT_PCH_ROOT)\SerialGpio\Dxe\PchSerialGpio.inf  
  INF  $(PROJECT_PCH_ROOT)\SmartTimer\Dxe\SmartTimer.inf  
  INF  $(PROJECT_PCH_ROOT)\SmmControl\RuntimeDxe\SmmControl.inf  
  INF  $(PROJECT_PCH_ROOT)\Smbus\Dxe\PchSmbusDxe.inf  
  INF  $(PROJECT_PCH_ROOT)\Smbus\Smm\PchSmbusSmm.inf  
  INF  $(PROJECT_PCH_ROOT)\LegacyInterrupt\Dxe\LegacyInterrupt.inf 
  INF  $(PROJECT_PCH_ROOT)\Wdt\Dxe\WdtDxe.inf 				# д
  INF  $(PROJECT_PCH_ROOT)\Reset\RuntimeDxe\PchResetRuntime.inf  
  INF  $(PROJECT_PCH_ROOT)\S3Support\Dxe\PchS3Support.inf
  # SMM drivers
  INF  $(PROJECT_PCH_ROOT)\Pcie\Smm\PchPcieSmm.inf  
  INF  $(PROJECT_PCH_ROOT)\PchInit\Smm\PchLateInitSmm.inf  
  INF  $(PROJECT_PCH_ROOT)\IoTrap\Smm\IoTrap.inf  
  INF  $(PROJECT_PCH_ROOT)\PchSmiDispatcher\Smm\PchSmiDispatcher.inf  
  #
  INF  $(PROJECT_PCH_ROOT)\SataController\Dxe\SataController.inf  # EFI 1.1 drivers  
  # Sample drivers TODO
  !if $(TARGET) == "RELEASE"
    INF $(PROJECT_PCH_ROOT)\SampleCode\BiosWriteProtect\Smm\PchBiosWriteProtect.inf 
  !endif
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# $(PROJECT_SA_ROOT)
#
  INF  $(PROJECT_SA_ROOT)/SampleCode/SaPolicyInit/Dxe/SaDxePolicyInit.inf
  INF  $(PROJECT_SA_ROOT)\AcpiTables\SaAcpiTables_Edk.inf		# SA\AcpiTables, установщик - внутри SaInit
  INF  $(PROJECT_SA_ROOT)\AcpiTables\SaSsdt\SaSsdt_Edk.inf	    # SA\AcpiTables\SaSsdt, установщик - внутри SaInit
  INF  $(PROJECT_SA_ROOT)\SmbiosMemory\Dxe\SmBiosMemory.inf 	# не будет загружен, т.к. пока не заполнили MEM_INFO_HOB
  INF  $(PROJECT_SA_ROOT)\SaInit\Dxe\SaInit.inf  
  INF  $(PROJECT_SA_ROOT)\SmmAccess\Dxe\SmmAccess.inf  
  INF  $(PROJECT_SA_ROOT)\BdatAccessHandler\Dxe\BdatAccessHandler.inf
  INF  $(PROJECT_SA_ROOT)\SaInit\Smm\SaLateInitSmm.inf   # Comment out below line if ASPM Init After Oprom was not supported
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


################################################################################
#
# FILE statements are provided so that a platform integrator can include
# complete EFI FFS files, as well as a method for constructing FFS files
# using curly "{}" brace scoping. The following three FILEs are
# for binary shell, binary fat and logo module.
#
################################################################################

  FILE FREEFORM = PCD(gEfiCommonPkgTokenSpaceGuid.PcdGopLogoFile) {
    SECTION RAW = $(PLATFORM_ROOT)/GuiResources/480x360x24bit.bmp
  }
  

  FILE FREEFORM = PCD(gEfiApplicationPkgTokenSpaceGuid.PcdOpensslConfigFile) {
    SECTION RAW = CryptoPkg/Library/OpensslLib/conf/openssl.cnf
  }


  FILE FREEFORM = PCD(gEfiApplicationPkgTokenSpaceGuid.RemoteCfgTlsConfigFile) {
    SECTION RAW = ApplicationPkg/RemoteCfgTlsDxe/RemoteCfgTlsConfig.ini
  }
  
  FILE FREEFORM = PCD(gEfiApplicationPkgTokenSpaceGuid.PcdChipsetConfigFile) {
    SECTION RAW = ApplicationPkg/Library/ChipsetConfigLib/ChipsetConfig.ini
  }

  FILE FREEFORM = PCD(gEfiApplicationPkgTokenSpaceGuid.PcdUsersConfigFile) {
    SECTION RAW = ApplicationPkg/Library/Platform/BIOS/UsersConfig.ini
  }
  
  FILE FREEFORM = PCD(gEfiApplicationPkgTokenSpaceGuid.PcdLDAPConfigFile) {
    SECTION RAW = ApplicationPkg/LdapAuthDxe/LdapConfig.ini
  }

  FILE FREEFORM = PCD(gEfiApplicationPkgTokenSpaceGuid.PcdRevokeChkConfigFile) {
    SECTION RAW = ApplicationPkg/Library/RevokeChkConfigLib/RevokeChkConfig.ini
  }

  FILE FREEFORM = PCD(gEfiApplicationPkgTokenSpaceGuid.PcdCDPLdapConfigFile) {
    SECTION RAW = ApplicationPkg/Library/CDPSupportLib/CDPLdapConfig.ini
  }

  FILE FREEFORM = PCD(gEfiApplicationPkgTokenSpaceGuid.PcdAuthModeConfigFile) {
    SECTION RAW = ApplicationPkg/Library/AuthModeConfig/AuthModeConfig.ini
  }

  FILE FREEFORM = PCD(gEfiApplicationPkgTokenSpaceGuid.PcdNetConfigFile) {
    SECTION RAW = ApplicationPkg/Library/NetSetupLib/NetSetup.ini
  }



#################################################################################
#
[FV.MAINFV]
BlockSize          = 0x1000
FvAlignment        = 16
ERASE_POLARITY     = 1
MEMORY_MAPPED      = TRUE
STICKY_WRITE       = TRUE
LOCK_CAP           = TRUE
LOCK_STATUS        = TRUE
WRITE_DISABLED_CAP = TRUE
WRITE_ENABLED_CAP  = TRUE
WRITE_STATUS       = TRUE
WRITE_LOCK_CAP     = TRUE
WRITE_LOCK_STATUS  = TRUE
READ_DISABLED_CAP  = TRUE
READ_ENABLED_CAP   = TRUE
READ_STATUS        = TRUE
READ_LOCK_CAP      = TRUE
READ_LOCK_STATUS   = TRUE
FvNameGuid         = 40e12513-14d1-4208-ab28-55634fd73416

FV_EXT_ENTRY  TYPE = 0x0002  {
  DATA = {
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  }
}


APRIORI PEI {
  INF  MdeModulePkg/Universal/PCD/Pei/Pcd.inf
  INF  MdeModulePkg/Universal/ReportStatusCodeRouter/Pei/ReportStatusCodeRouterPei.inf
  INF  MdeModulePkg/Universal/StatusCodeHandler/Pei/StatusCodeHandlerPei.inf
  INF  $(PLATFORM_ROOT)/PlatformInit/Pei/PlatformPei.inf
  INF  $(PROJECT_CPU_ROOT)/SampleCode/CpuPolicyInit/Pei/CpuPolicyInitPei.inf 
  INF  $(PROJECT_PCH_ROOT)/SampleCode/PchPolicyInit/Pei/PchPolicyInitPei.inf
  INF  $(PROJECT_ME_ROOT)/SampleCode/MePolicyInit/Pei/MePeiPolicyInit.inf
  INF  Replacement/UefiCpuPkg/CpuIoPei/CpuIoPei.inf
}


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# EdkCompatibilityPkg
# 
  INF  EdkCompatibilityPkg/Compatibility/ReadOnlyVariableOnReadOnlyVariable2Thunk/ReadOnlyVariableOnReadOnlyVariable2Thunk.inf
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# BIOSPkg
# 
  INF BIOSPkg/Intel/Cpu/SampleCode/SecCore/Sec/Ia32/SecCore.inf
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# MdeModulePkg
# 
  INF  MdeModulePkg/Core/Pei/PeiMain.inf
  INF  MdeModulePkg/Universal/PCD/Pei/Pcd.inf
  INF  MdeModulePkg/Universal/ReportStatusCodeRouter/Pei/ReportStatusCodeRouterPei.inf
  INF  MdeModulePkg/Universal/StatusCodeHandler/Pei/StatusCodeHandlerPei.inf
  INF  MdeModulePkg/Universal/FaultTolerantWritePei/FaultTolerantWritePei.inf
  INF  MdeModulePkg/Universal/CapsulePei/CapsulePei.inf
!if $(SECURE_BOOT_ENABLE) == FALSE
  INF  MdeModulePkg/Universal/Variable/Pei/VariablePei.inf
!endif
  INF  MdeModulePkg/Core/DxeIplPeim/DxeIpl.inf
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# Replacement
# 
  INF  Replacement/UefiCpuPkg/CpuIoPei/CpuIoPei.inf
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# SecurityPkg
# 
!if $(SECURE_BOOT_ENABLE) == TRUE
  INF  SecurityPkg/VariableAuthenticated/Pei/VariablePei.inf
!endif
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# $(PLATFORM_ROOT)
# 
  INF  $(PLATFORM_ROOT)/PlatformInit/Pei/PlatformPei.inf
  INF  $(PLATFORM_ROOT)/PlatformInit/PeiMtrr/PlatformPei2.inf
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# $(PROJECT_CPU_ROOT)
# 
  INF  $(PROJECT_CPU_ROOT)/SampleCode/CpuPolicyInit/Pei/CpuPolicyInitPei.inf
  INF  $(PROJECT_CPU_ROOT)\CpuInit\Pei\CpuInitPeim.inf
  INF  $(PROJECT_CPU_ROOT)\CpuS3\Pei\CpuS3Peim.inf 
  #
  !ifdef	TXT_ENABLE
    INF  $(PROJECT_CPU_ROOT)\Txt\TxtInit\Pei\TxtPei.inf 
  !endif
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# $(PROJECT_ME_ROOT)
# 
  INF  $(PROJECT_ME_ROOT)/SampleCode/MePolicyInit/Pei/MePeiPolicyInit.inf
  INF  $(PROJECT_ME_ROOT)/SampleCode/AmtPolicyInit/Pei/AmtPeiPolicyInit.inf
  INF  $(PROJECT_ME_ROOT)\PchMeUma\PchMeUma.inf
  INF  $(PROJECT_ME_ROOT)\Heci\Pei\HeciInit.inf
  INF  $(PROJECT_ME_ROOT)\ActiveManagement\StartWatchDog\Pei\StartWatchDog.inf
  INF  $(PROJECT_ME_ROOT)\ActiveManagement\AlertStandardFormat\Heci\Pei\AlertStandardFormatPei.inf
  #
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# $(PROJECT_PCH_ROOT)
#  
  INF  $(PROJECT_PCH_ROOT)/SampleCode/PchPolicyInit/Pei/PchPolicyInitPei.inf
  INF  $(PROJECT_PCH_ROOT)\PchInit\Pei\PchInitPeim.inf
  INF  $(PROJECT_PCH_ROOT)\Smbus\Pei\PchSmbusArpDisabled.inf
  INF  $(PROJECT_PCH_ROOT)\Spi\Pei\PchSpiPeim.inf
  INF  $(PROJECT_PCH_ROOT)\Wdt\Pei\WdtPeim.inf			
  INF  $(PROJECT_PCH_ROOT)\Reset\Pei\PchResetPeim.inf
  INF  $(PROJECT_PCH_ROOT)\SmmControl\Pei\SmmControl.inf 
  #
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# $(PROJECT_SA_ROOT)
#
  INF  $(PROJECT_SA_ROOT)/SampleCode/SaPolicyInit/Pei/SaPeiPolicyInit.inf
  INF  $(PROJECT_SA_ROOT)\SaInit\Pei\SaInitPeim.inf
  INF  $(PROJECT_SA_ROOT)\SmmAccess\Pei\SmmAccess.inf  
 #
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#


  INF  $(PROJECT_SA_ROOT)\MemoryInit\Pei\MemoryInit.inf	

!ifdef	TXT_ENABLE
  FILE RAW = 2D27C618-7DCD-41F5-BB10-21166BE7E143	Align = 4K {  
	SECTION COMPAT16 = $(PROJECT_CPU_ROOT)\Txt\BiosAcm\BiosAc.bin
  }

!if $(TARGET) == "RELEASE"
  FILE RAW = D1E59F50-E8C3-4545-BF61-11F002233C97	Align = 64K {  
	SECTION COMPAT16 = $(OUTPUT_DIRECTORY)/RELEASE_VS2012x86/IA32/BIOSPkg/Intel/Cpu/Txt/TxtInit/Pei/Ia32/TxtPeiApV7/OUTPUT/TxtPeiAp.com
  }
!else
  FILE RAW = D1E59F50-E8C3-4545-BF61-11F002233C97	Align = 4K {  
	SECTION COMPAT16 = $(OUTPUT_DIRECTORY)/$(TARGET)_VS2012x86/IA32/BIOSPkg/Intel/Cpu/Txt/TxtInit/Pei/Ia32/TxtPeiApV7/OUTPUT/TxtPeiAp.com
  }
!endif

!endif		# TXT_ENABLE


[FV.MICROCODE]
BlockSize          = 256
FvAlignment        = 16
ERASE_POLARITY     = 1
MEMORY_MAPPED      = TRUE
STICKY_WRITE       = TRUE
LOCK_CAP           = TRUE
LOCK_STATUS        = TRUE
WRITE_DISABLED_CAP = TRUE
WRITE_ENABLED_CAP  = TRUE
WRITE_STATUS       = TRUE
WRITE_LOCK_CAP     = TRUE
WRITE_LOCK_STATUS  = TRUE
READ_DISABLED_CAP  = TRUE
READ_ENABLED_CAP   = TRUE
READ_STATUS        = TRUE
READ_LOCK_CAP      = TRUE
READ_LOCK_STATUS   = TRUE

FILE RAW = 17088572-377F-44EF-8F4E-B09FFF46A070 Align = 16 {
	SECTION COMPAT16 = $(PLATFORM_ROOT2)/Microcode/microcode.bin
}


################################################################################
#
# Rules are use with the [FV] section's module INF type to define
# how an FFS file is created for a given INF file. The following Rule are the default
# rules for the different module type. User can add the customized rules to define the
# content of the FFS file.
#
################################################################################


############################################################################
# Example of a DXE_DRIVER FFS file with a Checksum encapsulation section   # 
############################################################################
#
#[Rule.Common.DXE_DRIVER]
#  FILE DRIVER = $(NAMED_GUID) {
#    DXE_DEPEX    DXE_DEPEX Optional      $(INF_OUTPUT)/$(MODULE_NAME).depex
#    COMPRESS PI_STD {
#      GUIDED {
#        PE32     PE32                    $(INF_OUTPUT)/$(MODULE_NAME).efi
#        UI       STRING="$(MODULE_NAME)" Optional
#        VERSION  STRING="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
#      }
#    }
#  }
#
############################################################################

[Rule.Common.PEI_CORE]
  FILE PEI_CORE = $(NAMED_GUID) {
    PE32     PE32     Align=32   	$(INF_OUTPUT)/$(MODULE_NAME).efi
    UI       STRING ="$(MODULE_NAME)" Optional         
    VERSION  STRING ="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)    
  }

[Rule.Common.PEIM]
  FILE PEIM = $(NAMED_GUID) {
     PEI_DEPEX PEI_DEPEX Optional        $(INF_OUTPUT)/$(MODULE_NAME).depex
     PE32      PE32     Align=32        $(INF_OUTPUT)/$(MODULE_NAME).efi
     UI       STRING="$(MODULE_NAME)" Optional         
     VERSION  STRING="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)   
  }

[Rule.Common.PE32_PEIM]
  FILE PEIM = $(NAMED_GUID) {
     PEI_DEPEX PEI_DEPEX Optional        $(INF_OUTPUT)/$(MODULE_NAME).depex
     PE32      PE32     Align=32 	$(INF_OUTPUT)/$(MODULE_NAME).efi
     UI       STRING="$(MODULE_NAME)" Optional         
     VERSION  STRING="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)   
  }

[Rule.Common.DXE_CORE]
  FILE DXE_CORE = $(NAMED_GUID) {
    	GUIDED 19D823D2-AE19-427f-AA51-6E238EF47AB1 {
      	PE32     PE32      $(INF_OUTPUT)/$(MODULE_NAME).efi
	}
      UI       STRING="$(MODULE_NAME)" Optional
      VERSION  STRING="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
  }

[Rule.Common.BS_DRIVER]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      $(INF_OUTPUT)/$(MODULE_NAME).depex
    GUIDED  19D823D2-AE19-427f-AA51-6E238EF47AB1 {
      PE32     PE32                    $(INF_OUTPUT)/$(MODULE_NAME).efi
    }
    UI       STRING="$(MODULE_NAME)" Optional
    VERSION  STRING="$(INF_VERSION)" Optional # BUILD_NUM=$(BUILD_NUMBER)
  }

[Rule.Common.BS_DRIVER.BINARY]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      $(INF_OUTPUT)/$(MODULE_NAME).depex
      GUIDED {
        PE32     PE32                    |.efi
        UI       STRING="$(MODULE_NAME)" Optional
        VERSION  STRING="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
      }
  }

[Rule.Common.RT_DRIVER]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      $(INF_OUTPUT)/$(MODULE_NAME).depex
    GUIDED  19D823D2-AE19-427f-AA51-6E238EF47AB1 {
      PE32     PE32                    $(INF_OUTPUT)/$(MODULE_NAME).efi
    }
    UI       STRING="$(MODULE_NAME)" Optional
    VERSION  STRING="$(INF_VERSION)" Optional # BUILD_NUM=$(BUILD_NUMBER)
  }


[Rule.Common.UEFI_DRIVER]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      $(INF_OUTPUT)/$(MODULE_NAME).depex
    GUIDED 19D823D2-AE19-427f-AA51-6E238EF47AB1 {
        PE32     PE32                    $(INF_OUTPUT)/$(MODULE_NAME).efi
      }
    UI       STRING="$(MODULE_NAME)" Optional
    VERSION  STRING="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
  }

[Rule.Common.UEFI_DRIVER.TIANOCOMPRESSED]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      $(INF_OUTPUT)/$(MODULE_NAME).depex
    GUIDED A31280AD-481E-41B6-95E8-127F4C984779 PROCESSING_REQUIRED = TRUE {
      PE32     PE32                    $(INF_OUTPUT)/$(MODULE_NAME).efi
      UI       STRING="$(MODULE_NAME)" Optional
      VERSION  STRING="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
    }
  }

[Rule.Common.DXE_DRIVER]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      $(INF_OUTPUT)/$(MODULE_NAME).depex
    GUIDED 19D823D2-AE19-427f-AA51-6E238EF47AB1 {
        PE32     PE32                    $(INF_OUTPUT)/$(MODULE_NAME).efi
      }
    UI       STRING="$(MODULE_NAME)" Optional
    VERSION  STRING="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
  }

[Rule.Common.DXE_DRIVER.BINARY]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      $(INF_OUTPUT)/$(MODULE_NAME).depex
      GUIDED {
        PE32     PE32                    |.efi
        UI       STRING="$(MODULE_NAME)" Optional
        VERSION  STRING="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
      }
  }


[Rule.Common.DXE_RUNTIME_DRIVER]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      $(INF_OUTPUT)/$(MODULE_NAME).depex
    GUIDED 19D823D2-AE19-427f-AA51-6E238EF47AB1 {
        PE32     PE32                    $(INF_OUTPUT)/$(MODULE_NAME).efi
      }
    UI       STRING="$(MODULE_NAME)" Optional
    VERSION  STRING="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
  }

[Rule.Common.DXE_SMM_DRIVER]
  FILE DRIVER = $(NAMED_GUID) {
     DXE_DEPEX DXE_DEPEX Optional        $(INF_OUTPUT)/$(MODULE_NAME).depex
     GUIDED 19D823D2-AE19-427f-AA51-6E238EF47AB1 {
       	PE32      PE32   Align=32         $(INF_OUTPUT)/$(MODULE_NAME).efi
     }
     UI       STRING="$(MODULE_NAME)" Optional
     VERSION  STRING="$(INF_VERSION)" Optional # BUILD_NUM=$(BUILD_NUMBER)
  }


[Rule.Common.SMM_CORE]
  FILE SMM_CORE = $(NAMED_GUID) {
    GUIDED  19D823D2-AE19-427f-AA51-6E238EF47AB1{
      	PE32     PE32           $(INF_OUTPUT)/$(MODULE_NAME).efi
    }
    UI       STRING="$(MODULE_NAME)" Optional
    VERSION  STRING="$(INF_VERSION)" Optional # BUILD_NUM=$(BUILD_NUMBER)
  }



[Rule.Common.UEFI_APPLICATION]
  FILE APPLICATION = $(NAMED_GUID) {
    COMPRESS PI_STD {
    GUIDED 19D823D2-AE19-427f-AA51-6E238EF47AB1 {
        PE32     PE32                    $(INF_OUTPUT)/$(MODULE_NAME).efi
      }
    UI       STRING="$(MODULE_NAME)" Optional
    VERSION  STRING="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)    }
  }

[Rule.Common.UEFI_APPLICATION.BINARY]
  FILE APPLICATION = $(NAMED_GUID) {
    COMPRESS PI_STD {
      GUIDED {
        PE32     PE32                    |.efi
        UI       STRING="$(MODULE_NAME)" Optional
        VERSION  STRING="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
      }
    }
  }

[Rule.Common.UEFI_DRIVER.BINARY]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      |.depex
    GUIDED 19D823D2-AE19-427f-AA51-6E238EF47AB1 {
        PE32     PE32                    |.efi
    }
    UI       STRING="$(MODULE_NAME)" Optional
    VERSION  STRING="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
  }

[Rule.Common.USER_DEFINED.ACPITABLE]
  FILE FREEFORM = $(NAMED_GUID) {
    GUIDED {
      RAW ACPI               |.acpi
      RAW ASL                |.aml
    }
  }

[Rule.Common.ACPITABLE]
  FILE FREEFORM = $(NAMED_GUID) {
    GUIDED  {
      RAW ACPI    Optional           |.acpi
      RAW ASL     Optional           |.aml
      RAW RAW     Optional           |.raw
    }
  }

[Rule.Common.SEC]
  FILE SEC = $(NAMED_GUID) RELOCS_STRIPPED {
    TE  TE    Align = 8       $(INF_OUTPUT)/$(MODULE_NAME).efi
    RAW BIN   Align = 16      |.raw
  }
[Rule.Common.SEC.RESET_VECTOR]
  FILE RAW = $(NAMED_GUID) {
   RAW RAW                |.raw
  }


[Rule.Common.USER_DEFINED.BINARY]
  FILE FREEFORM = $(NAMED_GUID) {
      RAW RAW   Optional  |.bin
  }


[Rule.Common.USER_DEFINED.XML]
  FILE FREEFORM = $(NAMED_GUID) {
    GUIDED 19D823D2-AE19-427f-AA51-6E238EF47AB1 {
      RAW RAW   Optional  |.xml
    }
  }
